# -*- coding: utf-8 -*-
"""Step_4_Post_Processing_final_version.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y0NS_afaQ_IDrcjjjdJv1ww79K8OR41t
"""

!pip install qiskit==1.4.2
!pip install qiskit-optimization
!pip install qiskit-algorithms
!pip install qiskit-ibm-runtime
!pip install docplex
!pip install cplex
!pip install qiskit-aer

!git clone https://github.com/bimehta/WISER_Optimization_VG.git

from __future__ import annotations
import logging
from itertools import combinations

import sys
sys.path.append('/content/WISER_Optimization_VG/src/')

from pathlib import Path
ROOT = Path('/content/WISER_Optimization_VG/')

lp_file_path = ROOT / 'data/31bonds/docplex-bin-avgonly-nocplexvars.lp'
print(f"Loading data from: {lp_file_path}")

!pip install docplex
!pip install cplex

import pickle

with open('/content/exp0.pkl', 'rb') as f:
    data = pickle.load(f)

print("Keys found in the .pkl file:")
print(list(data.keys()))

import pickle
import numpy as np
from pathlib import Path
import sys
import docplex.mp.model_reader

print("--- Setting up paths and imports ---")
ROOT = Path.cwd()
PROJECT_ROOT = ROOT / 'WISER_Optimization_VG'

sys.path.append(str(ROOT))
sys.path.append(str(PROJECT_ROOT / 'src'))
sys.path.append(str(PROJECT_ROOT / '_experiments'))

from optimization9 import uncompress_x
from local_search_py_new5 import variable_neighborhood_search
from doe_localsearch_new1 import doe_localsearch
from step_1_py_new3 import model_to_obj
print("--- Configuring the test ---")
doe = doe_localsearch['vns']
input_data_file = ROOT / 'exp0.pkl'
lp_file = PROJECT_ROOT / 'data/1/31bonds/docplex-bin-avgonly-nocplexvars.lp'
print(f"--- Loading model from {lp_file} to build objective function ---")
model = docplex.mp.model_reader.ModelReader.read(str(lp_file))
obj_fn = model_to_obj(model)
num_vars = model.number_of_binary_variables
print("Objective function created successfully.")
print(f"--- Loading data from {input_data_file} ---")
with open(input_data_file, 'rb') as f:
    data = pickle.load(f)

initial_x_compressed = data['step3_result_best_x']
initial_val = data['step3_result_best_fx']
print(f"Found one candidate solution with initial value: {initial_val:.4f}")
print("--- Running Variable Neighborhood Search on the candidate ---")
initial_x = initial_x_compressed
polished_x, polished_val, _, _, _ = variable_neighborhood_search(
    initial_x, initial_val, obj_fn, doe | {'refval': data['refvalue']}
)
print(f"  -> Polished value found: {polished_val:.4f}")
print("\n--- Saving final result ---")
output_directory = ROOT / 'my_results'
output_directory.mkdir(exist_ok=True)
output_file_path = output_directory / 'polished_result.pkl'

final_result = {
    'best_solution_bitstring': polished_x,
    'best_solution_value': polished_val,
    'original_value': initial_val,
    'original_file': str(input_data_file)
}

with open(output_file_path, 'wb') as f:
    pickle.dump(final_result, f)

print(f"âœ… Success! The single best result was saved to: {output_file_path}")

import pickle
import pandas as pd
file_path = '/content/my_results/polished_result.pkl'

with open(file_path, 'rb') as f:
    results = pickle.load(f)

df = pd.DataFrame([results])
print(df)

"""Step 4: Post-Processing"""